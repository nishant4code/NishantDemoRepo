{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DF_blob_input",
						"type": "DatasetReference"
					},
					"name": "EmployeeData"
				},
				{
					"dataset": {
						"referenceName": "DS_DF_blob_input_dept",
						"type": "DatasetReference"
					},
					"name": "DepartmentData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DF_JOINoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "JoinEmpDataDepData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmployeeData",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DepartmentData",
				"EmployeeData, DepartmentData join(Column_3 == DepartmentData@Column_1,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinEmpDataDepData",
				"JoinEmpDataDepData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmpDepData'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Column_1 = EmployeeData@Column_1,",
				"          Column_2 = EmployeeData@Column_2,",
				"          Column_2 = DepartmentData@Column_2",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}